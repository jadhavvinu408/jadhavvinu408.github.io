{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/adddataform/adddataform.component.html","webpack:///./src/app/adddataform/adddataform.component.less","webpack:///./src/app/adddataform/adddataform.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--<form >\\n  <div class=\\\"form-group\\\" >\\n    <label for=\\\"title\\\">Title</label>\\n    <input class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" #title=\\\"ngModel\\\" [(ngModel)]=\\\"title\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"description\\\">Description</label>\\n    <input class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"description\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n</form>-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZGRhdGFmb3JtL2FkZGRhdGFmb3JtLmNvbXBvbmVudC5sZXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { PData } from '../postData';\n\n@Component({\n  selector: 'add-formdata',\n  templateUrl: './adddataform.component.html',\n  styleUrls: ['./adddataform.component.less']\n})\nexport class AdddataformComponent implements OnInit {\n  title:string;\n  description:string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class=\\\"navbar  navbar-inverse\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MY CRUD APP</a>\\n        </div>\\n      </div><!-- /.container -->\\n</nav>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <!--<add-formdata></add-formdata>-->\\n      <div *ngIf=\\\"newRow\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"title\\\">Title</label>\\n        <input class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" [(ngModel)]=\\\"title\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\">Description</label>\\n        <input class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"description\\\">\\n      </div>\\n      <button type=\\\"submit\\\" *ngIf=\\\"submitBtn\\\" class=\\\"btn btn-default btn-primary\\\" (click)=\\\"onSubmitRecord(data)\\\">Submit</button>\\n      <button type=\\\"submit\\\" *ngIf=\\\"saveBtn\\\" class=\\\"btn btn-default\\\" (click)=\\\"saveRecord(data,index)\\\">Save</button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-8\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\"><h2>Image</h2></div>\\n      </div>\\n      <table class=\\\"table table-bordered table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>Title</th>\\n            <th>Description</th>\\n            <th>Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let postCont of postContent.documents; let indx = index\\\">\\n            <td class=\\\"col-lg-4\\\">{{postCont.fields.title.stringValue}}</td>\\n            <td class=\\\"col-lg-5\\\">{{postCont.fields.description.stringValue}}</td>\\n            <td class=\\\"col-lg-3\\\">\\n            <button class=\\\"btn btn-warning btn-sm float-right\\\"> <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n              <span (click) = removePost(postCont)> Delete</span>\\n            </button>\\n            <button class=\\\"btn btn-primary btn-sm\\\"> <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n              <span (click) = updatePost(postCont,indx)> Update</span>\\n            </button>\\n            \\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"addRowFunction()\\\">Add a new row</button>\\n    </div>\\n\\n  </div>\\n</div>\\n<footer class=\\\"footer\\\">\\n      <div class=\\\"container\\\">\\n        <p class=\\\"text-muted text-center\\\">Created by vinayak Jadhav</p>\\n      </div>\\n</footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJ9 */\"","import { AdddataformComponent } from './adddataform/adddataform.component';\nimport { PData } from './postData';\nimport { PostService } from './post.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title:string;\n  saveBtn:boolean;\n  submitBtn:boolean;\n  newRow:boolean;\n  description:string;\n  updateIndex:number;\n  updateData = {};\n  public postContent = {};\n  constructor(private posts: PostService){\n    this.submitBtn = true;\n    this.saveBtn = false;\n    this.newRow = false;\n  }\n  ngOnInit(){\n      this.getTableData();\n  }\n  getTableData(){\n    this.posts.getPost().subscribe(Response =>{\n      this.postContent = Response;\n      console.log(this.postContent);\n    })\n  }\n\n  removePost(postCont,indx){\n     this.posts.removePosts(postCont).subscribe(Response =>{\n     this.getTableData();\n     console.log(Response); \n     })\n   }\n\n   onSubmitRecord(data){\n     this.posts.onSubmit(this.title,this.description).subscribe(res =>{\n       this.getTableData();\n       this.title = '';\n       this.description = '';\n     })\n   }\n\n   updatePost(postCont,index){\n      this.updateIndex = index;\n      this.updateData = postCont;\n      this.saveBtn = true;\n      this.submitBtn = false;\n      this.title = postCont.fields.title.stringValue;\n      this.description = postCont.fields.description.stringValue;\n   }\n\n   saveRecord(){\n      this.posts.onSave(this.updateData).subscribe(res =>{\n      this.getTableData();\n      this.title = '';\n      this.description = '';\n      this.saveBtn = false;\n      this.submitBtn = true;\n     });\n   }\n\n   addRowFunction(){\n     this.newRow = true;\n   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostService } from './post.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AdddataformComponent } from './adddataform/adddataform.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdddataformComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [PostService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { PData } from './postData';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\nimport {Observable} from 'rxjs/observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  posts:any;\n  //private _url:string = \"https://firestore.googleapis.com/v1beta1/projects/angular-taske7f39/databases/(default)/documents/tasks\";\n  private _url:string =\"https://firestore.googleapis.com/v1beta1/projects/angular-task-e7f39/databases/(default)/documents/tasks\";\n  private _urlBase:string = \"https://firestore.googleapis.com/v1beta1\";\n  constructor(private http: HttpClient) {\n\n   }\n\n   getPost():Observable<PData[]>{\n     return this.http.get<PData[]>(this._url);\n   }\n\n   removePosts(postCont){\n     let delurl = this._urlBase+'/'+postCont.name;\n     return this.http.delete(delurl);\n   }\n   \n   onSubmit(title,description){\n     let obj = {\n        \"fields\":{\n          \"title\":{\n              \"stringValue\":title\n            },\n            \"description\":{\n              \"stringValue\":description\n            }\n        }\n      }\n      return this.http.post(this._url,obj)\n   }\n\n    \n\n// this.http.post(\n//    \"http://localhost:3000/contacts\",\n//    JSON.stringify({id: 4, name: 'some'}),\n//    httpOptions \n// ).subscribe();\n\n   onSave(updateData){\n     let obj = {\n        \"fields\":{\n          \"title\":{\n              \"stringValue\":updateData.fields.title\n            },\n            \"description\":{\n              \"stringValue\":updateData.fields.description\n            }\n        }\n      }\n      let httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'my-auth-token'\n        })\n      };\n     let updateUrl = this._urlBase+'/'+updateData.name;\n     return this.http.put(updateUrl,obj,httpOptions)\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}